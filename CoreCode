#include <stdio.h>
#include <time.h>
#include "E101.h"
void forward(int speed, int s, int micros) {
	set_motor(1, -speed);
	set_motor(2, speed);
	sleep1(s, micros);
}
void reverse(int speed, int s, int micros) {
	set_motor(1, speed);
	set_motor(2, -speed);
	sleep1(s, micros);
}
void right() {
	int speed = 50;
	set_motor(1, -speed);
	set_motor(2, -speed);
	sleep1(0, 500000);
}
void left() {
	int speed = 50;
	set_motor(1, speed);
	set_motor(2, speed);
	sleep1(0, 500000);
}
void stop(int s, int micros) {
	set_motor(1, 0);
	set_motor(2, 0);
	sleep1(s, micros);
}
//straight//straight//straight//left//right//right//left//left//right//right
//1	          //2	   //3   	//4    //5    //6   //7   //8   //9   //10
	int main() {
		init();
		int error = 0;
		int total_error = 0;
		int previous_error = 0;
		int error_diff = 0;
		int numWhitePixels = 0;
		int pSignal = 0;
		int iSignal = 0;
		int dSignal = 0;
		int totalSignal = 0;
		float kp = 0.5;
		float ki = 0;
		float kd = 0.5;
		int maxCol = 320;
		int midCol = maxCol/2;
		int row, pixel;
		int section = 1;
		int quadrant = 1;
		int speed = 50;
		open_screen_stream();

	    char server[15]={'1','3','0','.','1','9','5','.','6','.','1','9','6'};
   		char message[24]={'P','l','e','a','s','e'};
   		int port = 1024;
		
		connect_to_server(server, port);
		send_to_server(message);
		receive_from_server(message);
		send_to_server(message);
		printf("%s", message);

		while(true) {
			take_picture();
			previous_error = error;
			error = 0;
			numWhitePixels = 0;
			for(row=0; row<maxCol; row++){ //loop across image
				pixel = get_pixel(midCol,row,3);
				if(pixel>105) {
					numWhitePixels++;
					error += 0;
				} else {
					error += (row-midCol);
				}
			}
			for(row=0; row<maxCol; row++) {
				set_pixel(midCol, row, 255,0,0);
			}
			update_screen();
			if(numWhitePixels < 5) {
				reverse(speed, 0, 100000);
				printf("No white pixels on camera\n");
				error = 0;
				total_error = 0;
				error_diff = 0;
				continue;
			}
			/*if(numWhitePixels > 150) {
				
				printf("\nSECTION NUMBER: %d\n", section);
				
				if(section>0) {
					forward(speed, 0, 700000);
					right();
				} else if(section==1||section==3||section==8) {
					forward(speed, 0, 700000);
					left();
				} else if(section==4){
					stop(0, 100000);
					return 1;
				}
				section += 1;
				sleep1(0, 100000);
			}*/
			total_error += error;
			error_diff = error - previous_error;
			
			pSignal = (error*kp);
			iSignal = (total_error*ki);
			dSignal = (error_diff*kd);
			
			totalSignal = (pSignal+iSignal+dSignal)/300;

			int leftspeed = (numWhitePixels > 0) ? speed-(totalSignal) : 0;
			int rightspeed = (numWhitePixels > 0) ? speed+(totalSignal) : 0;
			printf("\nL: %d R: %d | %d", leftspeed, rightspeed, error);
			printf("\nP: %d, I: %d, D: %d", pSignal, iSignal, dSignal);
			printf("\nWPixels: %d", numWhitePixels);
			
			set_motor(1, -leftspeed);
			set_motor(2, rightspeed);
			sleep1(0,10000);
			
		}
	}
